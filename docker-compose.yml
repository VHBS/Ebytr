version: '3.9'
services:
  # frontend:
  #   image: node
  #   platform: linux/x86_64
  #   restart: always
  #   container_name: app_frontend
  #   working_dir: /app
  #   command: npm install && npm start
  #   volumes:
  #     - ./frontend/:/app
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     backend:
  #       condition: service_healthy
  #   # Os `healthcheck` devem garantir que a aplicação
  #   # está operacional, antes de liberar o container
  #   healthcheck:
  #     test: ["CMD", "lsof", "-t", "-i:3000"]  # Caso utilize outra porta interna para o front, altere ela aqui também
  #     timeout: 10s
  #     retries: 5
  backend:
    build: ./backend
    platform: linux/x86_64
    restart: always
    container_name: app_backend
    command: npm run dev
    working_dir: /app
    volumes:
      - ./backend/:/app
    ports:
      - 3001:3001
    environment:
      - PORT=3001
      - DB_USER=root
      - DB_PASS=123456
      - DB_HOST=db
      - DB_NAME=EBYTR
      - DB_PORT=3306
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3001"]
      timeout: 10s
      retries: 5
  db:
    image: mysql
    container_name: db_mysql
    platform: linux/x86_64
    restart: 'always'
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=123456
    healthcheck:
        test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
        timeout: 15s
        retries: 5
    cap_add:
        - SYS_NICE